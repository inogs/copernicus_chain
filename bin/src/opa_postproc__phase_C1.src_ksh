#!/bin/ksh
# This script executes the parallel postprocess
# phase C1:
# 1. aveScan
# 2. Products generation
# 3. packing output data
# 4. Monthly products
# 5. Maps
# 6. Spaghetti

# Load common profile
. @@(I:OPA_HOME)/bin/opa_profile.inc

# Rundate definition
opa_set_run

# start
opa_start

typeset -i errors=0

ec=0 ; errors=$(( $errors + $ec ))

OPA_POSTPROC=$OPA_WRKDIR/POSTPROC
opa_prex "cd $OPA_POSTPROC"

typeset -i errors=0

opa_prex "module unload numpy"
opa_prex "source $OPA_VENV_1/bin/activate"
PYTHONPATH=${PYTHONPATH}:$OPA_BITSEA
PRODUCTS_DIR=$OPA_POSTPROC/PRODUCTS
opa_mkdir "$PRODUCTS_DIR"
export MASKFILE=$OPA_WRKDIR/MODEL/meshmask.nc

#- yyyy-mm-dd la data in cui avviene la corsa della catena
{
BULLETIN_DATE=$(  $OPA_BINDIR/date --utc --date="$OPA_RUNDATE"                         +"%Y%m%d"  )
} 


hot_start=false
if $OPA_DA_ENABLE ; then
  opa_check_da ; missing_da_files=$?
  if [[ $missing_da_files -eq 0 ]] ; then
    hot_start=true
  fi
fi

opa_stage_in "$OPA_POSTPROC"  \
         "$OPA_ETCDIR/static-data/POSTPROC/VarDescriptor_1.xml" \
         "$OPA_ETCDIR/static-data/POSTPROC/VarDescriptor_2.xml" || {
  opa_die 1 "stage-in of POSTPROC failed"
}



    MODELDIR=$OPA_WRKDIR/MODEL
  CHLSUP_DIR=$OPA_WRKDIR/POSTPROC/AVE_FREQ_1/CHL_SUP
  if [[ $I_OPA_HOSTNAME = "meucci" ]]
  then
     export I_MPI_FABRICS=shm:tcp
  fi

     opa_prex_or_die "mpirun -np 17 python $OPA_POSTPROCDIR/var_aggregator.py -l ave*N1p.nc -i $MODELDIR/AVE_FREQ_1  -d $OPA_POSTPROC/VarDescriptor_1.xml  -t $MODELDIR/AVE_FREQ_1  -c $CHLSUP_DIR -m $MASKFILE"

     OUTDIR=$OPA_WRKDIR/POSTPROC/AVE_FREQ_1
       TMPS=$OPA_WRKDIR/POSTPROC/TMPS
     opa_mkdir "$OUTDIR"
     opa_mkdir "$TMPS"
     opa_prex  " cd $OPA_POSTPROCDIR"
case $I_OPA_HOSTNAME in
   meucci)
     opa_prex_or_die "mpirun -np 68 -iface ens6 python aveScan.py -l ave*.nc -i $MODELDIR/AVE_FREQ_1 -a $MODELDIR/AVE_FREQ_1 -f N1p -d $OPA_POSTPROC/VarDescriptor_1.xml -o $OUTDIR -t $TMPS -s "
     ;;
   *)
     opa_prex_or_die "mpirun python aveScan.py -l ave*.nc -i $MODELDIR/AVE_FREQ_1 -a $MODELDIR/AVE_FREQ_1 -f N1p -d $OPA_POSTPROC/VarDescriptor_1.xml -o $OUTDIR -t $TMPS -s "
     ;;
esac



opa_prex "cd $OPA_POSTPROC"

opa_prex_or_die "mpirun -np 11 python $OPA_POSTPROCDIR/kd.py -i $MODELDIR/AVE_FREQ_3 -m $MASKFILE -o $MODELDIR/AVE_FREQ_1 -l ave*.nc"


if [[ $OPA_RUNTYPE == 'analysis' ]] ; then

   opa_analyses_dates  $OPA_RUNDATE  > timelist.a

   opa_prex_or_die "mpirun -np 7 python $OPA_POSTPROCDIR/prodotti/prodotti_copernicus.py -i $OPA_WRKDIR/MODEL/AVE_FREQ_1 -o $PRODUCTS_DIR -m $MASKFILE -t timelist.a -d an -b $BULLETIN_DATE --tr daily"
else

   opa_simulates_dates $OPA_RUNDATE          > timelist.s
   opa_forecast_dates  $OPA_RUNDATE          > timelist.f

     opa_prex_or_die "mpirun -np 1  python $OPA_POSTPROCDIR/prodotti/prodotti_copernicus.py -i $OPA_WRKDIR/MODEL/AVE_FREQ_1 -o $PRODUCTS_DIR -m $MASKFILE -t timelist.s -d sm -b $BULLETIN_DATE --tr daily"
     opa_prex_or_die "mpirun -np 10 python $OPA_POSTPROCDIR/prodotti/prodotti_copernicus.py -i $OPA_WRKDIR/MODEL/AVE_FREQ_1 -o $PRODUCTS_DIR -m $MASKFILE -t timelist.f -d fc -b $BULLETIN_DATE --tr daily"
fi


ONLINE_VALIDATION_DIR=${OPA_POSTPROC}/AVE_FREQ_1/online_validation
  ZIPPED_DIR=$OPA_WRKDIR/POSTPROC/COMPRESSED_FOR_ARCHIVE


if [[ $OPA_RUNTYPE == 'analysis' ]] ; then
   output_restart_date=`set_spec_data -date ${OPA_RUNDATE} -days "-1" -hours 0 `
else
   output_restart_date=`set_spec_data -date ${OPA_RUNDATE} -days  "0" -hours 0 `
fi

opa_prex_or_die "mpirun python $OPA_POSTPROCDIR/archive/netcdf4_compress.py -i $MODELDIR/RESTARTS -o $ZIPPED_DIR/RST -l RST.${output_restart_date}*.nc"

opa_prex "cd $ZIPPED_DIR/RST"
opa_prex_or_die "tar -cf RST.${output_restart_date:0:8}.tar RST.${output_restart_date}.*nc"

opa_prex "cd $OPA_POSTPROC"
opa_prex_or_die "mpirun python $OPA_POSTPROCDIR/archive/netcdf4_compress.py -i $MODELDIR/AVE_FREQ_1 -o $ZIPPED_DIR/AVE_FREQ_1 -l *nc"

if [[ $OPA_RUNTYPE == 'analysis' ]] ; then
     opa_mkdir "$ZIPPED_DIR/AVE_FREQ_2"
     opa_mkdir "$ZIPPED_DIR/DA/"
     opa_mkdir "$ZIPPED_DIR/DA/DATIMES"
     opa_mkdir "$ZIPPED_DIR/DA/tar"


     # DA_SECTION ###########
	 opa_prex_or_die "mpirun python $OPA_POSTPROCDIR/archive/netcdf4_compress.py -i $MODELDIR/DA__FREQ_1  -o $ZIPPED_DIR/DA -l RST_after*1[23]:00:00*.nc"
	 opa_prex_or_die "mpirun python $OPA_POSTPROCDIR/archive/netcdf4_compress.py -i $MODELDIR/DA__FREQ_1  -o $ZIPPED_DIR/DA -l RSTbefore*1[23]:00:00*.nc -c 60"
	 opa_prex_or_die "mpirun python $OPA_POSTPROCDIR/archive/compress.py         -i $MODELDIR/DA__FREQ_1  -o $ZIPPED_DIR/DA -l [2cl]*nc " # *corr.nc, limcorr.nc, chl*nc"
	 opa_prex_or_die "cp $MODELDIR/DA__FREQ_1/*dat      $ZIPPED_DIR/DA"
	 opa_prex_or_die "cp $MODELDIR/DA__FREQ_1/OceanVar* $ZIPPED_DIR/DA"
	 opa_prex_or_die "cp $OPA_WRKDIR/DA/*check.txt      $ZIPPED_DIR/DA"

     LEN_EXCLUDED=$( ls $OPA_WRKDIR/DA/*nc | wc -l )
     if [[ $LEN_EXCLUDED > 0 ]] ; then
         opa_prex_or_die "cp $OPA_WRKDIR/DA/*nc             $ZIPPED_DIR/DA"
     else
         echo "No DA Check Exclusion files "
     fi
     opa_prex_or_die "cp $OPA_WRKDIR/DA/daTimes*       $ZIPPED_DIR/DA/DATIMES"
     opa_prex_or_die "cp $MODELDIR/daTimes*            $ZIPPED_DIR/DA/DATIMES"
     cd $ZIPPED_DIR/DA/DATIMES
	 opa_prex_or_die "tar -cf $ZIPPED_DIR/DA/tar/daTimes.tar daTimes*"

	 DA_TIMES=$OPA_WRKDIR/POSTPROC/daTimes
	 opa_prex_or_die "cat $MODELDIR/daTimes | cut -c 1-8 | uniq > $DA_TIMES"

	 opa_prex_or_die "mpirun python $OPA_POSTPROCDIR/archive/packDA.py -i $ZIPPED_DIR/DA -o $ZIPPED_DIR/DA/tar -v $DA_TIMES"
     ##########################


     opa_prex_or_die "mpirun python $OPA_POSTPROCDIR/var_aggregator.py -l ave*N1p.nc -i $MODELDIR/AVE_FREQ_2  -d $OPA_POSTPROC/VarDescriptor_2.xml  -t $MODELDIR/AVE_FREQ_2  -c $CHLSUP_DIR -m $MASKFILE"
     opa_prex_or_die "mpirun python $OPA_POSTPROCDIR/archive/netcdf4_compress.py -i $MODELDIR/AVE_FREQ_2   -o $ZIPPED_DIR/AVE_FREQ_2 -l ave.*.nc"

# monthly products

DAY=$( date --date="$OPA_RUNDATE" +%d )
if [[ $DAY -gt 7 ]] && [[ $DAY -lt 15 ]] ; then
ARCHIVE_DIR=$I_OPA_HOME/archive

 UNZIPPED_DIR=$OPA_POSTPROC/MONTHLY/DAILY_ARCHIVED
  MONTHLY_DIR=$OPA_POSTPROC/MONTHLY/AVE
 MONTHLY_PROD=$OPA_POSTPROC/MONTHLY/PRODUCTS

opa_mkdir "$OPA_POSTPROC/MONTHLY/"
opa_mkdir "$ZIPPED_DIR"
opa_mkdir "$UNZIPPED_DIR"
opa_mkdir "$MONTHLY_DIR"
opa_mkdir "$MONTHLY_PROD"

opa_prex_or_die "python $OPA_BITSEA/validation/online/archive_monthly_extractor.py -a $OPA_ARCDIR_ROOT/analysis/ -o $UNZIPPED_DIR "
opa_prex_or_die "mpirun -np 14 python $OPA_BITSEA/validation/online/monthly_averager.py -i $UNZIPPED_DIR -o $MONTHLY_DIR -m $MASKFILE"
opa_prex_or_die "basename $( ls $MONTHLY_DIR/ave*N1p.nc ) |  cut -c 5-12 > timelist_monthly.txt "
opa_prex_or_die "mpirun -np 1 python ${OPA_POSTPROCDIR}/prodotti/prodotti_copernicus.py -i $MONTHLY_DIR -o $MONTHLY_PROD -t timelist_monthly.txt -d an -m $MASKFILE --tr monthly -b $BULLETIN_DATE "

INPDIR_SAT_V_DAILY=${OPA_INPDIR_ROOT}/analysis/VALIDATION/SAT
INPDIR_FLOAT_V_WEEKLY=${OPA_INPDIR_ROOT}/analysis/VALIDATION/FLOAT/WEEKLY_CLIM 
 YYYYMM=$( date --date="$OPA_RUNDATE 1 month ago" +%Y%m )
 MVR_DIR=${ONLINE_VALIDATION_DIR}/MVR
 MVR_PRODUCTS=$ONLINE_VALIDATION_DIR/MVR/ONLINE_TIMESERIES



 opa_prex_or_die "python $OPA_BITSEA/validation/online/MVR_gen.py -i ${INPDIR_SAT_V_DAILY} -t ${INPDIR_FLOAT_V_WEEKLY} -o $MVR_DIR -m $YYYYMM "
 opa_cp "$MVR_DIR/product_quality_stats*" "$MVR_PRODUCTS"


fi
fi # analysis

#### MAP GENERATION #####

MAPS_DIR=$OPA_WRKDIR/POSTPROC/AVE_FREQ_1/MAP_GEN
mkdir -p $MAPSDIR $MAPS_DIR/MAP_ORIG $MAPS_DIR/MAP_COMPRESSED
opa_stage_in "$MAPS_DIR" \
        "${OPA_ETCDIR}/static-data/POSTPROC/fonts/TitilliumWeb-Regular.ttf" \
        "${OPA_ETCDIR}/static-data/POSTPROC/fonts/TitilliumWeb-Bold.ttf"  || {  
opa_die 7 "stage-in failed for font file" 
}


cd $MAPS_DIR
LOGO=${OPA_ETCDIR}/static-data/POSTPROC/LogoEchoOGS4.png

opa_prex "mpirun -np 72 python $OPA_BITSEA/build_layer_maps.py -l $LOGO -o $MAPS_DIR/MAP_ORIG -m $MASKFILE -i $OPA_WRKDIR/MODEL/AVE_FREQ_1  -g ave*N1p.nc  -p $OPA_BITSEA/postproc/Plotlist_bio.xml "
opa_prex "mpirun -np 72 python $OPA_BITSEA/build_layer_maps.py -l $LOGO -o $MAPS_DIR/MAP_ORIG -m $MASKFILE -i $OPA_WRKDIR/MODEL/AVE_FREQ_1  -g ave*N1p.nc  -p $OPA_BITSEA/postproc/Plotlist_phys.xml "

cd $OPA_BITSEA/validation/online
opa_prex "mpirun -np 36 python map_compressor.py -i $MAPS_DIR/MAP_ORIG -o $MAPS_DIR/MAP_COMPRESSED -b $OPA_BINDIR"
opa_prex "cd $MAPS_DIR/MAP_COMPRESSED"
opa_prex "rename 0-fs8.png 0.png *.png"


opa_prex "echo $OPA_RUNDATE > ${MAPS_DIR}/MAP_COMPRESSED/last"
opa_prex "cp $OPA_BITSEA/postproc/Plotlist_bio.xml ${MAPS_DIR}"

opa_prex "cd $MAPS_DIR/MAP_COMPRESSED"
opa_prex "tar -cf $OPA_POSTPROC/AVE_FREQ_1/maps.tar * "

STAT_PROFILES=${OPA_INPDIR_ROOT}/analysis/VALIDATION/MODEL/AVE_FREQ_1/STAT_PROFILES/
opa_prex "cp $OPA_WRKDIR/POSTPROC/AVE_FREQ_1/STAT_PROFILES/ave*nc ${STAT_PROFILES}"


########### spaghetti section  ###########

END_YEAR=$(  $OPA_BINDIR/date --utc --date="$OPA_RUNDATE" +"%Y"  )
START_YEAR=$(( $END_YEAR - 2 ))


PKL_DIR=$OPA_POSTPROC/AVE_FREQ_1/PKL
opa_mkdir $PKL_DIR
for year in `seq $START_YEAR $END_YEAR `; do
    YEAR_DIR=$PKL_DIR/PKL${year}
    opa_mkdir $YEAR_DIR
    cd $YEAR_DIR
    opa_prex "ln -fs $STAT_PROFILES/ave.${year}*nc ."
    opa_prex "mpirun -np 17 python $OPA_POSTPROCDIR/compact_profiles.py -i $YEAR_DIR -o $YEAR_DIR"
done

IMG_DIR=${ONLINE_VALIDATION_DIR}/spaghetti
opa_mkdir $IMG_DIR
opa_prex "mpirun -np 17 python $OPA_BITSEA/validation/online/profiles_plotter_season.py -i $PKL_DIR -o $IMG_DIR -v $OPA_BITSEA/postproc/Plotlist_bio.xml -m $MASKFILE -d $OPA_RUNDATE"






opa_log 0 "postprocess_C1 done [$(opa_exitcode $ec)]"
opa_report "bio_chain-tl-output_available" "0" "true"
opa_exit "$errors"



