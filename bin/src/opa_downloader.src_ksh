#!/bin/ksh
# This script launches the daily downloader from bit.sea

# Load common profile
. @@(I:OPA_HOME)/bin/opa_profile.inc

case $I_OPA_HOSTNAME in
    pico)
      opa_prex "module purge"
      opa_prex "module load autoload intelmpi netcdf/4.1.3--intel--cs-xe-2015--binary python/2.7.9 numpy/1.9.2--python--2.7.9 matplotlib/1.4.3--python--2.7.9"
      ;;
    galileo)
      PYTHONPATH=" "
      opa_prex "module purge"
      opa_prex "module load autoload intelmpi netcdf/4.4.1--intel--pe-xe-2017--binary python/2.7.9 numpy/1.9.1--python--2.7.9 scipy/0.15.1--python--2.7.9 matplotlib/1.4.3--python--2.7.9"
      ONLINE_REPO=/gss/gss_work/DRES_OGS_BiGe/Observations/TIME_RAW_DATA/ONLINE_V5C
        CLIM_FILE=/gss/gss_work/DRES_OGS_BiGe/Observations/CLIMATOLOGY/SAT/CCI_1km/SatClimatology.nc
      DIR_SUBMASK=/gss/gss_work/DRES_OGS_BiGe/Observations/CLIMATOLOGY/SAT/CCI_1km/SUBMASKsat
      SYNCRONIZE_INPDIR=1      
      ;;
    marconi)
      PYTHONPATH=" "
      opa_prex "module purge"
      opa_prex "module load autoload intelmpi python/2.7.12 numpy/1.11.2--python--2.7.12 scipy/0.18.1--python--2.7.12"
      PYTHONPATH=$PYTHONPATH:/cineca/prod/opt/compilers/python/2.7.12/none/lib/python2.7/site-packages/
      ONLINE_REPO=/gss/gss_work/DRES_OGS_BiGe/Observations/TIME_RAW_DATA/ONLINE
        CLIM_FILE=/gss/gss_work/DRES_OGS_BiGe/Observations/CLIMATOLOGY/SAT/CCI_1km/SatClimatology.nc
      DIR_SUBMASK=/gss/gss_work/DRES_OGS_BiGe/Observations/CLIMATOLOGY/SAT/CCI_1km/SUBMASKsat
      SYNCRONIZE_INPDIR=1      
      ;;
    meucci)
      PYTHONPATH=" "
      opa_prex "module purge"
      opa_prex "module load autoload intelmpi python/2.7.12" # numpy/1.11.2--python--2.7.12"
      PYTHONPATH=$PYTHONPATH:/cineca/prod/opt/compilers/python/2.7.12/none/lib/python2.7/site-packages/
      ONLINE_REPO=$I_OPA_HOME/inpdir/ONLINE/
        CLIM_FILE=$I_OPA_HOME/inpdir/CLIMATOLOGY/SAT/CCI_1km/SatClimatology.nc
      DIR_SUBMASK=$I_OPA_HOME/inpdir/CLIMATOLOGY/SAT/CCI_1km/SUBMASKsat
      SYNCRONIZE_INPDIR=0
      ;;      
    *)
      opa_prex "module load python"
      ;;
    esac

export ONLINE_REPO
opa_prex "source $OPA_VENV_1/bin/activate"
opa_prex "cd $OPA_BITSEA"
export PYTHONPATH=$OPA_BITSEA:${PYTHONPATH}

################   1. Update of wmo list  ###########################################


DATE=`date +%Y%m%d`
WEEKDAY=`date +%w`
opa_mkdir $OPA_LOGDIR/daily
JSON_FILE=$OPA_LOGDIR/daily/wmo.json
opa_prex "./downloader/harvesters_info/maos_query.sh > $JSON_FILE"
if [ $? -eq 0 ] ; then
   export WMO_FILE=${ONLINE_REPO}/FLOAT_BIO/wmo.txt
   opa_prex "python downloader/harvesters_info/json2table.py -j $JSON_FILE -o $WMO_FILE"
fi

################   2. Update of original datasets  ##################################

opa_prex "python downloader/downloader.py -l $OPA_LOGDIR/daily/$DATE.log -a $OPA_NOTIFY_ADDRESSES -d ${ONLINE_REPO} -v 3"

################   3. Update of Float Indexes and superfloat  ############################


opa_prex "cd $OPA_BITSEA"

DATASET=${ONLINE_REPO}/FLOAT_BIO
GSS_RAW_INDEX=${DATASET}/Float_Index.0.txt
GSS_SEL_INDEX=${DATASET}/Float_Index.txt

opa_prex "python Float/dump_index.py -i ${DATASET} -f ${GSS_SEL_INDEX} -o ${GSS_RAW_INDEX} --type coriolis  1>> $OPA_LOGDIR/daily/$DATE.log 2>&1"
opa_prex "python Float/check_time_pos.py -i ${GSS_RAW_INDEX} -o ${GSS_SEL_INDEX}                            1>> $OPA_LOGDIR/daily/$DATE.log 2>&1" 

DATASET=${ONLINE_REPO}/FLOAT_LOVBIO
GSS_RAW_INDEX=${DATASET}/Float_Index.0.txt
GSS_SEL_INDEX=${DATASET}/Float_Index.txt
opa_prex "python Float/dump_index.py -i ${DATASET} -f ${GSS_SEL_INDEX} -o ${GSS_RAW_INDEX} --type lov  1>> $OPA_LOGDIR/daily/$DATE.log 2>&1"
opa_prex "python Float/check_time_pos.py -i ${GSS_RAW_INDEX} -o ${GSS_SEL_INDEX}                       1>> $OPA_LOGDIR/daily/$DATE.log 2>&1"

DATASET=${ONLINE_REPO}/SUPERFLOAT
GSS_RAW_INDEX=${DATASET}/Float_Index.0.txt
GSS_SEL_INDEX=${DATASET}/Float_Index.txt
OFFSET_DAYS=-7
DATESTART=$( opa_date_day_offset $OPA_TODAY $OFFSET_DAYS )
opa_prex "python Float/superfloat_chla.py    -s $DATESTART -e $OPA_TODAY -o $DATASET "
opa_prex "python Float/superfloat_nitrate.py -s $DATESTART -e $OPA_TODAY -o $DATASET "
opa_prex "python Float/superfloat_oxygen.py  -s $DATESTART -e $OPA_TODAY -o $DATASET "
opa_prex "python Float/superfloat_par.py     -s $DATESTART -e $OPA_TODAY -o $DATASET "
opa_prex "python Float/superfloat_bbp700.py  -s $DATESTART -e $OPA_TODAY -o $DATASET "
opa_prex "python Float/superfloat_ph.py      -s $DATESTART -e $OPA_TODAY -o $DATASET "

opa_prex "python Float/dump_index.py -i ${DATASET} -f ${GSS_SEL_INDEX} -o ${GSS_RAW_INDEX} --type superfloat  1>> $OPA_LOGDIR/daily/$DATE.log 2>&1"
opa_prex "python Float/check_time_pos.py -i ${GSS_RAW_INDEX} -o ${GSS_SEL_INDEX}                              1>> $OPA_LOGDIR/daily/$DATE.log 2>&1"

################   4. Update of SAT NRT derived datasets  ############################

MASKFILE=${OPA_ETCDIR}/static-data/MED24_125/meshmask.nc

# Check 1km NRT
ORIGDIR=${ONLINE_REPO}/SAT/MULTISENSOR/1Km/NRT/DAILY/ORIG/
CHECKDIR=${ONLINE_REPO}/SAT/MULTISENSOR/1Km/NRT/DAILY/CHECKED
CHECK_BASEDIR=${ONLINE_REPO}/SAT/MULTISENSOR/1Km/NRT/DAILY/


WEEKLY_DIR1km=${ONLINE_REPO}/SAT/MULTISENSOR/1Km/NRT/WEEKLY_2_1km/
  WEEKLYDATES=${ONLINE_REPO}/SAT/MULTISENSOR/1Km/NRT/WEEKLY_2_AVEDATES
WEEKLY_DIR_24=${ONLINE_REPO}/SAT/MULTISENSOR/1Km/NRT/WEEKLY_2_24/
 DAILY_DIR_24=${ONLINE_REPO}/SAT/MULTISENSOR/1Km/NRT/DAILY/CHECKED_24

opa_prex "cd Sat"
opa_prex "python sat_check.py -i $ORIGDIR -o $CHECK_BASEDIR -c $CLIM_FILE -m SAT1km_mesh -s $DIR_SUBMASK -w ${CHECK_BASEDIR}/STATISTICS "
opa_prex " python interpolator.py -i $CHECKDIR -o $DAILY_DIR_24 -m Mesh24 -M $MASKFILE --inmesh SAT1km_mesh"

if [[ $WEEKDAY -eq 3 ]]; then
opa_prex "python aveSat.py -i $CHECKDIR -o $WEEKLY_DIR1km -m SAT1km_mesh -t weekly_tuesday -d $WEEKLYDATES "

opa_prex "python  interpolator.py -i $WEEKLY_DIR1km -o $WEEKLY_DIR_24 -m Mesh24 -M $MASKFILE --inmesh SAT1km_mesh " 
 OPA_START_DATE=$($OPA_BINDIR/date --date="8 days ago" +%Y%m%d)
 opa_mkdir "$I_OPA_HOME/inpdir/WEEKLY"
 opa_cp "${ONLINE_REPO}/SAT/MULTISENSOR/1Km/NRT/WEEKLY_2_24/${OPA_START_DATE}_d-OC_CNR-L3-CHL-MedOC4AD4_MULTI_1KM-MED-NRT-v02.nc $I_OPA_HOME/inpdir/WEEKLY"

fi

################   5. Update of inpdir/ONLINE from gss  ############################

if [ $SYNCRONIZE_INPDIR -eq 1 ] ; then
	GSS_DIRS="
	SAT/MULTISENSOR/1Km/NRT/WEEKLY_2_24/
	SAT/MULTISENSOR/1Km/NRT/DAILY/CHECKED_24/
	FLOAT_BIO/
        FLOAT_LOVBIO/
        SUPERFLOAT/

	"
	     for DIR in $GSS_DIRS ; do
	         opa_mkdir "$I_OPA_HOME/inpdir/ONLINE/$DIR"
                 opa_prex "rsync -rv ${ONLINE_REPO}/${DIR} $I_OPA_HOME/inpdir/ONLINE/${DIR}"
	      done
fi

################   6. Update of SAT DT derived datasets  ############################

ORIGDIR=${ONLINE_REPO}/SAT/MULTISENSOR/1Km/DT/DAILY/ORIG/
CHECKDIR=${ONLINE_REPO}/SAT/MULTISENSOR/1Km/DT/DAILY/CHECKED
CHECK_BASEDIR=${ONLINE_REPO}/SAT/MULTISENSOR/1Km/DT/DAILY/
WEEKLY_DIR1km=${ONLINE_REPO}/SAT/MULTISENSOR/1Km/DT/WEEKLY_2_1km/
  WEEKLYDATES=${ONLINE_REPO}/SAT/MULTISENSOR/1Km/DT/WEEKLY_2_AVEDATES
WEEKLY_DIR_24=${ONLINE_REPO}/SAT/MULTISENSOR/1Km/DT/WEEKLY_2_24/
 DAILY_DIR_24=${ONLINE_REPO}/SAT/MULTISENSOR/1Km/DT/DAILY/CHECKED_24


opa_prex "python sat_check.py -i $ORIGDIR -o $CHECK_BASEDIR -c $CLIM_FILE -m SAT1km_mesh -s $DIR_SUBMASK -w ${CHECK_BASEDIR}/STATISTICS "
opa_prex " python interpolator.py -i $CHECKDIR -o $DAILY_DIR_24 -m Mesh24 -M $MASKFILE --inmesh SAT1km_mesh "

if [[ $WEEKDAY -eq 3 ]]; then
opa_prex "python aveSat.py -i $CHECKDIR -o $WEEKLY_DIR1km -m SAT1km_mesh -t weekly_tuesday -d $WEEKLYDATES "
opa_prex "python interpolator.py -i $WEEKLY_DIR1km -o $WEEKLY_DIR_24 -m Mesh24 -M $MASKFILE --inmesh SAT1km_mesh "

fi

opa_exit "$errors"
