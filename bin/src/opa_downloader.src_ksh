#!/bin/ksh
# This script launches the daily downloader from bit.sea

# Load common profile
. @@(I:OPA_HOME)/bin/opa_profile.inc

case $I_OPA_HOSTNAME in
    g100)
      PYTHONPATH=" "
      opa_prex "module load intelmpi/oneapi-2021--binary"
      ONLINE_REPO=/gss/gss_work/DRES_OGS_BiGe/Observations/TIME_RAW_DATA/ONLINE_V9C/
        CLIM_FILE=/gss/gss_work/DRES_OGS_BiGe/Observations/CLIMATOLOGY/SAT/CCI_1km/SatClimatology.nc
      DIR_SUBMASK=/gss/gss_work/DRES_OGS_BiGe/Observations/CLIMATOLOGY/SAT/CCI_1km/SUBMASKsat
      SYNCRONIZE_INPDIR=1      
      ;;
    *)
      opa_prex "module load python"
      ;;
    esac

export ONLINE_REPO
opa_prex "source $OPA_VENV_1/bin/activate"
opa_prex "cd $OPA_BITSEA"
export PYTHONPATH=$OPA_BITSEA:${PYTHONPATH}

################   1. Update of coriolis dataset  ###########################################


DATE=`date +%Y%m%d`
WEEKDAY=`date +%w`
WEEKDAY_TO_AVE=0 # Sunday
opa_mkdir $OPA_LOGDIR/daily

#FLOAT DOWNLOADER
DIR=$ONLINE_REPO/CORIOLIS/download
LOCALDIR=$ONLINE_REPO/CORIOLIS/download/tmp
UPDATE_FILE=$DIR/DIFF_floats.txt
INDEXER_CORIOLIS=$ONLINE_REPO/CORIOLIS/download/Med_floats.txt


# if DIFF_floats.txt is too recent, it means that another node is running opa_downloader.ksh
# Superposition can damage superfloat generation.
ELAPSED_TIME=$(( $(date +%s) - $(date +%s -r $UPDATE_FILE) ))
if [[ $ELAPSED_TIME -le 1500 ]] ; then
   echo "Elapsed_time = $ELAPSED_TIME"
   echo "$UPDATE_FILE too recent. Stopping"
   ls -l $UPDATE_FILE
   opa_exit 0
fi

opa_mkdir $LOCALDIR
#rename old syntetic_profile file and old output file
opa_prex "cp $INDEXER_CORIOLIS $DIR/Med_floats_OLD.txt"


#download new syntetic profile

HOST=ftp.ifremer.fr
USER=anonymous
REMOTEDIR=/ifremer/argo/
opa_prex "rm -f $DIR/argo_synthetic-profile_index.txt.gz"
opa_prex "$OPA_BINDIR/ncftpget -u $USER $HOST $DIR $REMOTEDIR/argo_synthetic-profile_index.txt.gz"
opa_prex "gzip -dc $DIR/argo_synthetic-profile_index.txt.gz > $DIR/argo_synthetic-profile_index.txt"
#correct file from blank parts
opa_prex "grep -v ",," $DIR/argo_synthetic-profile_index.txt | grep -v D.nc > $DIR/argo_synthetic-profile_index_CORR.txt"
#launch the reader -> obtain the mediterranean floater file
opa_prex "python $OPA_BITSEA/Float/argo_reader.py -i $DIR/argo_synthetic-profile_index_CORR.txt -o $INDEXER_CORIOLIS"
#matching old vs new -> return a file called UPDATE_FILE.txt in which there is the list of floats that are different between the two files
opa_prex "python $OPA_BITSEA/Float/argo_difference.py -N $INDEXER_CORIOLIS -O $DIR/Med_floats_OLD.txt -o $UPDATE_FILE"
opa_prex "cp $UPDATE_FILE $OPA_LOGDIR/daily/DIFF_floats.$(date +\%Y\%m\%d-\%H:\%M:\%S).txt"

#### working in interactive mode, it is possible to select a specific update file, saved in log/daily ####
# UPDATE_FILE=/g100/home/usera07ogs/a07ogs00/OPA/V9C-dev/log/daily/DIFF_floats.20221110-12:28:06.txt
##########################################################################################################

## download netcdf files in a tmp directory
REMOTEDIR=/ifremer/argo/dac/
for I in `awk --field-separator=, '{print $1}'  $UPDATE_FILE ` ; do
  opa_prex "$OPA_BINDIR/ncftpget -u $USER $HOST $LOCALDIR $REMOTEDIR/$I"
done

cd $LOCALDIR
for I in `ls *nc ` ; do
   WMO_DIR=${I:2:7}
   CORIOLIS_DIR=$ONLINE_REPO/CORIOLIS/${WMO_DIR}/
   opa_mkdir $CORIOLIS_DIR
   opa_mv "$I $CORIOLIS_DIR"
done


################   2. Update of sat  datasets  ##################################
cd $OPA_BITSEA
opa_prex "python downloader/downloader.py -l $OPA_LOGDIR/daily/$DATE.log -a $OPA_NOTIFY_ADDRESSES -d ${ONLINE_REPO} -v 3"

################   3. Update of Float Indexes and superfloat  ############################

opa_prex "cd $OPA_BITSEA/Float"
INDEXER_0=$ONLINE_REPO/CORIOLIS/Float_Index_0.txt
INDEXER=$ONLINE_REPO/CORIOLIS/Float_Index.txt

opa_prex "python  dump_index_from_txt.py -i $INDEXER_CORIOLIS -o ${INDEXER_0}"
opa_prex "python  check_time_pos.py -i ${INDEXER_0} -o ${INDEXER}"


DATASET=$ONLINE_REPO/SUPERFLOAT
opa_mkdir $DATASET
# removing SUPERFLOAT files before regeneration
for I in `awk --field-separator=, '{print $1}'  $UPDATE_FILE `
 do
   V1=${I/coriolis\//}
   V2=${V1/profiles\//}
   opa_prex "rm -f ${DATASET}/$V2"
 done

export              WOA_DIR=$OPA_ETCDIR/static-data/FLOAT/WOA/
export CANYONB_TRAINING_DIR=$OPA_ETCDIR/static-data/FLOAT/CANYON-B
DIAG_DIR=$DATASET/oxy_diag

opa_prex "python superfloat_chla.py     -o $DATASET -u $UPDATE_FILE"
opa_prex "python superfloat_oxygen.py   -o $DATASET -u $UPDATE_FILE -O $DIAG_DIR"
opa_prex "python superfloat_nitrate.py  -o $DATASET -u $UPDATE_FILE"
opa_prex "python superfloat_par.py      -o $DATASET -u $UPDATE_FILE"
opa_prex "python superfloat_bbp700.py   -o $DATASET -u $UPDATE_FILE"
opa_prex "python superfloat_ph.py       -o $DATASET -u $UPDATE_FILE"

opa_prex "python dump_index.py -i $DATASET -o $DATASET/Float_Index.txt -t superfloat"

if [ -f $DIAG_DIR/Blacklist_wmo.csv ] ; then
    opa_mv "$DIAG_DIR/Blacklist_wmo.csv $OPA_LOGDIR/daily/Blacklist_wmo.$(date +\%Y\%m\%d-\%H:\%M:\%S).txt"
else
  echo "No Blacklist_wmo.csv generated"
fi

################   4. Update of SAT NRT derived datasets  ############################

MASKFILE=${OPA_ETCDIR}/static-data/MED24_125/meshmask.nc

# Check 1km NRT
ORIGDIR=${ONLINE_REPO}/SAT/CHL/NRT/DAILY/ORIG/
CHECKDIR=${ONLINE_REPO}/SAT/CHL/NRT/DAILY/CHECKED
CHECK_BASEDIR=${ONLINE_REPO}/SAT/CHL/NRT/DAILY/


WEEKLY_DIR1km=${ONLINE_REPO}/SAT/CHL/NRT/WEEKLY_1_1km/
  WEEKLYDATES=${ONLINE_REPO}/SAT/CHL/NRT/WEEKLY_1_AVEDATES
WEEKLY_DIR_24=${ONLINE_REPO}/SAT/CHL/NRT/WEEKLY_1_24/
 DAILY_DIR_24=${ONLINE_REPO}/SAT/CHL/NRT/DAILY/CHECKED_24

opa_prex "cd $OPA_BITSEA/Sat"
opa_prex "python sat_check.py -i $ORIGDIR -o $CHECK_BASEDIR -c $CLIM_FILE -m SAT1km_mesh -s $DIR_SUBMASK -w ${CHECK_BASEDIR}/STATISTICS "
opa_prex " python interpolator.py -i $CHECKDIR -o $DAILY_DIR_24 -m $MASKFILE --inmesh SAT1km_mesh -v CHL"

if [[ $WEEKDAY -eq $WEEKDAY_TO_AVE ]]; then
opa_prex "python aveSat.py -i $CHECKDIR -o $WEEKLY_DIR1km -m SAT1km_mesh -t weekly_monday -d $WEEKLYDATES "
opa_prex "python  interpolator.py -i $WEEKLY_DIR1km -o $WEEKLY_DIR_24 -m $MASKFILE --inmesh SAT1km_mesh -v CHL"
fi


################   5. Update of inpdir/ONLINE from gss  ############################

if [ $SYNCRONIZE_INPDIR -eq 1 ] ; then
	GSS_DIRS="
	SAT/CHL/NRT/WEEKLY_1_24/
	SAT/CHL/NRT/DAILY/CHECKED_24/
	SAT/CHL/NRT/DAILY/STATISTICS/
	CORIOLIS/
    SUPERFLOAT/

	"
	     for DIR in $GSS_DIRS ; do
	         opa_mkdir "$I_OPA_HOME/inpdir/ONLINE/$DIR"
                 opa_prex "rsync -rv --exclude=OLD ${ONLINE_REPO}/${DIR} $I_OPA_HOME/inpdir/ONLINE/${DIR}"
	      done
fi



################   6. Update of CHL DT derived datasets  ############################
opa_prex "cd $OPA_BITSEA/Sat/"

MASKFILE=${OPA_ETCDIR}/static-data/MED24_125/meshmask.nc

ORIGDIR=${ONLINE_REPO}/SAT/CHL/DT/DAILY/ORIG/
CHECKDIR=${ONLINE_REPO}/SAT/CHL/DT/DAILY/CHECKED
CHECK_BASEDIR=${ONLINE_REPO}/SAT/CHL/DT/DAILY/
WEEKLY_DIR1km=${ONLINE_REPO}/SAT/CHL/DT/WEEKLY_1_1km/
  WEEKLYDATES=${ONLINE_REPO}/SAT/CHL/DT/WEEKLY_1_AVEDATES
WEEKLY_DIR_24=${ONLINE_REPO}/SAT/CHL/DT/WEEKLY_1_24/
 DAILY_DIR_24=${ONLINE_REPO}/SAT/CHL/DT/DAILY/CHECKED_24


opa_prex "python sat_check.py -i $ORIGDIR -o $CHECK_BASEDIR -c $CLIM_FILE -m SAT1km_mesh -s $DIR_SUBMASK -w ${CHECK_BASEDIR}/STATISTICS "
opa_prex "python interpolator.py -i $CHECKDIR -o $DAILY_DIR_24 -m $MASKFILE --inmesh SAT1km_mesh -v CHL"

if [[ $WEEKDAY -eq $WEEKDAY_TO_AVE ]]; then
opa_prex "python aveSat.py -i $CHECKDIR -o $WEEKLY_DIR1km -m SAT1km_mesh -t weekly_monday -d $WEEKLYDATES "
opa_prex "python interpolator.py -i $WEEKLY_DIR1km -o $WEEKLY_DIR_24 -m $MASKFILE --inmesh SAT1km_mesh -v CHL"

WEEKLYDATES=${ONLINE_REPO}/SAT/CHL/DT/WEEKLY_4_AVEDATES
WEEKLY_DIR1km=${ONLINE_REPO}/SAT/CHL/DT/WEEKLY_4_1km/
WEEKLY_DIR_24=${ONLINE_REPO}/SAT/CHL/DT/WEEKLY_4_24/
opa_prex "python aveSat.py -i $DAILY_DIR_24 -o $WEEKLY_DIR_24 -m Mesh24 -t weekly_thursday -d $WEEKLYDATES "
fi

################   6. Update of KD490 DT derived datasets  ############################



ORIGDIR=${ONLINE_REPO}/SAT/KD490/DT/DAILY/ORIG/
CHECKDIR=${ONLINE_REPO}/SAT/KD490/DT/DAILY/CHECKED/
CLIMFILE_KD490=/gss/gss_work/DRES_OGS_BiGe/Observations/TIME_RAW_DATA/STATIC/SAT/KD490/KD490_Climatology_1km.nc
SATMESH=SAT1km_mesh
WEEKLY_1KMDIR=${ONLINE_REPO}/SAT/KD490/DT/WEEKLY_1_1km/
WEEKLY_24_DIR=${ONLINE_REPO}/SAT/KD490/DT/WEEKLY_1_24/

opa_prex "python KD490/sat_check.py -i $ORIGDIR -o $CHECKDIR -c $CLIMFILE_KD490 -m $SATMESH"

if [[ $WEEKDAY -eq $WEEKDAY_TO_AVE ]]; then
opa_prex "python KD490/aveSat_kd.py -i $CHECKDIR -o $WEEKLY_1KMDIR -m $SATMESH -t weekly_monday"
opa_prex "python interpolator.py -i $WEEKLY_1KMDIR -o $WEEKLY_24_DIR --inmesh $SATMESH -m $MASKFILE -v KD490"

fi
opa_exit "$errors"

