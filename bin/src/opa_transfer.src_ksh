#!/bin/ksh
# This script transfer images to OGS server

# Load common profile
. @@(I:OPA_HOME)/bin/opa_profile.inc

# Rundate definition
opa_set_run

# start
opa_start

_FTP_MODE="2-STEPS"		# ssh on login node, then scp to fec

typeset -i errors=0

opa_prex "cd $OPA_WRKDIR/POSTPROC"

# ==============================================================================
# copy pro files to ftp server
#nc_config="$I_OPA_HOME/etc/nc-config/.meteo.ncconfig
#if $OPA_TEST ; then
#  nc_config="${nc_config}.test"
#fi

this_run_date="$OPA_RUNDATE"
#prev_run_date=$($OPA_BINDIR/date --utc --date="$this_run_date 7 days ago" +"%Y%m%d")

set -A this_run_dates -- $(opa_dates "$this_run_date")

set -A this_run_files --
set -A this_run_ldirs --
set -A this_run_subdirs --
typeset -i f_num=0
typeset    f_indices=" "
for file in $(opa_pro_files $this_run_date) ; do
  this_run_files[f_num]="${file}"
  this_run_ldirs[f_num]="$OPA_WRKDIR/POSTPROC"
  this_run_subdirs[f_num]="."
  f_indices="${f_indices}$f_num "
  f_num=$(( $f_num + 1 ))
done
this_run_ldirs[f_num]="/"
this_run_files[f_num]="${OPA_PRO_DESCRIPTION_FILE}"
this_run_subdirs[f_num]="pro"
f_indices="${f_indices}$f_num "
f_num=$(( $f_num + 1 ))

date_index=0
date_indices=' '
while [[ $date_index -lt ${#this_run_dates[*]} ]] ; do
  date_indices="${date_indices}${date_index} "
  date_index=$(( $date_index + 1 ))
done

pro_successfully_uploaded=false

typeset -i errs=0
# { OPA_TRANSFER_PRO_BEGIN
if $OPA_TRANSFER_PRO ; then
  case "$_FTP_MODE" in
    "2-STEPS")
      opa_log 0 "starting pro upload in SCP mode"
    
      for pro_uhd in $OPA_PRO_UHD_LIST ; do
        errs=0
        echo "@@@ $pro_uhd"
        host=$( echo "$pro_uhd" | $OPA_BINDIR/cut -d: -f2 )
        user=$( echo "$pro_uhd" | $OPA_BINDIR/cut -d: -f1 )
        dir=$( echo "$pro_uhd" | $OPA_BINDIR/cut -d: -f3- )
        echo "@@@ ${user}@${host}:${dir}"
        typeset -i errs=0
        for f_index in $f_indices ; do
          this_run_ldir="${this_run_ldirs[f_index]}"
          this_run_file="${this_run_files[f_index]}"
          this_run_subdir="${this_run_subdirs[f_index]}"
          success=false
          for login_node in $OPA_PRIMARY_LOGIN_NODE $OPA_SECONDARY_LOGIN_NODE ; do
            opa_prex "ssh ${USER}@${login_node} ssh ${user}@${host} opa_mkdir ${dir}/pub/$OPA_FTPSERVER_SUBDIR/pro" $OPA_SIMULATE_TRANSFER
            opa_prex "ssh ${USER}@${login_node} opa_scp -p $this_run_ldir/$this_run_file ${user}@${host}:${dir}/pub/$OPA_FTPSERVER_SUBDIR/$this_run_subdir" $OPA_SIMULATE_TRANSFER && {
              success=true
              break
            }
          done
          $success || errs=$(( $errs + 1 ))
        done
        if [[ $errs -eq 0 ]] ; then
          pro_successfully_uploaded=true
          break
        fi
      done
      ;;
    *)
      opa_die 101 "unsupported FTP MODE <${_FTP_MODE}>"
  esac
  if ! $pro_successfully_uploaded ; then
    opa_log 0 "ERROR: pro upload on ftp server failed"
    errors=$(( $errors + 1 ))
  fi
fi  
# } OPA_TRANSFER_PRO_END
# ==============================================================================
# { OPA_UPDATE_TDS_CATALOG
if $OPA_UPDATE_TDS_CATALOG ; then
#  for pro_uhd in $OPA_PRO_UHD_LIST ; do
#    errs=0
#    echo "@@@ $pro_uhd"
#    host=$( echo "$pro_uhd" | $OPA_BINDIR/cut -d: -f2 )
#    user=$( echo "$pro_uhd" | $OPA_BINDIR/cut -d: -f1 )
#    dir=$( echo "$pro_uhd" | $OPA_BINDIR/cut -d: -f3- )
#    echo "@@@ ${user}@${host}:${dir}"
#    typeset -i errs=0
#    for login_node in $OPA_PRIMARY_LOGIN_NODE $OPA_SECONDARY_LOGIN_NODE ; do
#      opa_prex "ssh ${USER}@${login_node} ssh ogsts003@devel.fec.cineca.it '\~/update_tds.sh' ${dir}/pub/$OPA_FTPSERVER_SUBDIR/pro ${dir}/pub/$OPA_FTPSERVER_SUBDIR $I_OPA_STAGE" && {
#        success=true
#        break
#      }
#    done
#    if $success ; then
#      break
#    fi
#  done
#  if ! $success ; then
#    opa_log 0 "ERROR: update od the thredds catalog failed"
#    errors=$(( $errors + 1 ))
#  fi
  
  for pro_uhd in $OPA_PRO_UHD_LIST ; do
    errs=0
    echo "@@@ $pro_uhd"
    host=$( echo "$pro_uhd" | $OPA_BINDIR/cut -d: -f2 )
    user=$( echo "$pro_uhd" | $OPA_BINDIR/cut -d: -f1 )
    dir=$( echo "$pro_uhd" | $OPA_BINDIR/cut -d: -f3- )
    echo "@@@ ${user}@${host}:${dir}"
    typeset -i errs=0
    opa_prex "ssh ${USER}@${login_node} ssh ${user}@${host} opa_mkdir ${dir}/pub/$OPA_FTPSERVER_SUBDIR/pro" $OPA_SIMULATE_TRANSFER 
    for login_node in $OPA_PRIMARY_LOGIN_NODE $OPA_SECONDARY_LOGIN_NODE ; do
      opa_prex "ssh ${USER}@${login_node} echo $OPA_RUNDATE $(date +'%Y%m%d %H:%M:%S') \> ${dir}/pub/$OPA_FTPSERVER_SUBDIR/pro/last-update-tstamp" $OPA_SIMULATE_TRANSFER && {
        success=true
        break
      }
      opa_prex "ssh ${USER}@${login_node} chmod 644 ${dir}/pub/$OPA_FTPSERVER_SUBDIR/pro/last-update-tstamp" $OPA_SIMULATE_TRANSFER
    done
    if $success ; then
      break
    fi
  done
  if ! $success ; then
    opa_log 0 "ERROR: update od the thredds catalog failed"
    errors=$(( $errors + 1 ))
  fi
  
fi

# } OPA_UPDATE_TDS_CATALOG
# ==============================================================================

# { OPA_TRANSFER_IMAGES_BEGIN
if $OPA_TRANSFER_IMAGES ; then
  nc_config="$I_OPA_HOME/etc/nc-config/.ogs.ncconfig"
  if $OPA_TEST ; then
    nc_config="${nc_config}.test"
  fi
  # the website need to work with rundate -1
  
  OPA_RUNDATE_1d_AGO=$( $OPA_BINDIR/date --utc --date="$OPA_RUNDATE 1 days ago" +%y%m%d )
  OPA_year=$( $OPA_BINDIR/date --utc --date="$OPA_RUNDATE 1 days ago" +%Y )
  
  # create tgz file
  tgz_file="images_${OPA_RUNDATE_1d_AGO}.tgz"
  opa_prex "tar -cvf - *.gif | gzip -c > $tgz_file" || errors=$(( $errors + 1 ))
  
  # create the remote install script
  remote_install_script="remote_install_${OPA_RUNDATE}.${$}.sh"
  #tmp_install_script="$OPA_VARDIR/tmp/${remote_install_script}"
  tmp_install_script="${remote_install_script}"
  cat > $tmp_install_script <<EofScript
#!/bin/sh
. /etc/profile
cd ${OPA_OGS_REMOTE_DIR}/${OPA_year}/${OPA_RUNDATE_1d_AGO}
gunzip  $tgz_file 
tar -xvf images_${OPA_RUNDATE_1d_AGO}.tar 
#gzip -dc $tgz_file | tar -xvf - -C ${OPA_OGS_REMOTE_DIR}/${OPA_year}/${OPA_RUNDATE_1d_AGO}
rm -f ${OPA_OGS_REMOTE_DIR}/${OPA_year}/${OPA_RUNDATE_1d_AGO}/[QW]*.gif
chmod 444 ${OPA_OGS_REMOTE_DIR}/${OPA_year}/${OPA_RUNDATE_1d_AGO}/*.gif
mv ${OPA_OGS_REMOTE_DIR}/${OPA_year}/${OPA_RUNDATE_1d_AGO}/?_??????.gif ${OPA_OGS_REMOTE_DIR}/${OPA_year}/ANALISI/
mv ${OPA_OGS_REMOTE_DIR}/${OPA_year}/${OPA_RUNDATE_1d_AGO}/?_??????_??P.gif ${OPA_OGS_REMOTE_DIR}/${OPA_year}/PROFILI/
mv ${OPA_OGS_REMOTE_DIR}/${OPA_year}/${OPA_RUNDATE_1d_AGO}/t_??????[fa]_l[nt]_??.gif ${OPA_OGS_REMOTE_DIR}/${OPA_year}/TRANSET/
rm -f ${OPA_OGS_REMOTE_DIR}/${OPA_year}/${OPA_RUNDATE_1d_AGO}/images_${OPA_RUNDATE_1d_AGO}.tar
${OPA_OGS_REMOTE_DIR}/eseguiANIMA ${OPA_RUNDATE_1d_AGO}
rm -f ${OPA_OGS_REMOTE_DIR}/${OPA_year}/${OPA_RUNDATE_1d_AGO}/$remote_install_script
EofScript

  chmod 700 $tmp_install_script
  #trap "rm -f $tmp_install_script" 0


  # transfer file to ogs server

  opa_prex "ssh ${OPA_OGS_REMOTE_USER}@${OPA_OGS_REMOTE_HOST} opa_mkdir ${OPA_OGS_REMOTE_DIR}/${OPA_year}/${OPA_RUNDATE_1d_AGO}" $OPA_SIMULATE_TRANSFER || errors=$(( $errors + 1 ))
  
  opa_scp "-p $tgz_file ${OPA_OGS_REMOTE_USER}@${OPA_OGS_REMOTE_HOST}:${OPA_OGS_REMOTE_DIR}/${OPA_year}/${OPA_RUNDATE_1d_AGO}" $OPA_SIMULATE_TRANSFER || errors=$(( $errors + 1 ))
  opa_scp "-p $tmp_install_script ${OPA_OGS_REMOTE_USER}@${OPA_OGS_REMOTE_HOST}:${OPA_OGS_REMOTE_DIR}/${OPA_year}/${OPA_RUNDATE_1d_AGO}" $OPA_SIMULATE_TRANSFER || errors=$(( $errors + 1 ))
  
  opa_prex "ssh ${OPA_OGS_REMOTE_USER}@${OPA_OGS_REMOTE_HOST} ${OPA_OGS_REMOTE_DIR}/${OPA_year}/${OPA_RUNDATE_1d_AGO}/$remote_install_script" $OPA_SIMULATE_TRANSFER
fi
# } OPA_TRANSFER_PRO_IMAGES
# ==============================================================================

opa_exit "$errors"

