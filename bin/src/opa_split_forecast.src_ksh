#!/bin/ksh
# This script splits the forecast input file, containing $OPA_FORECAST_DAYS days of forecast,
# in $OPA_FORECAST_DAYS files, each of them contains a single day.

# Load common profile
. @@(I:OPA_HOME)/bin/opa_profile.inc

# rundate definition
opa_set_run

# start
opa_start

typeset -i errors=0

output_dir=$OPA_WRKDIR/OPAOPER

input_date=$( $OPA_BINDIR/date --utc --date="$OPA_RUNDATE 00:00:00" +%y%m%d )

# split forecast in $output_dir
typeset -i day=0
typeset day_offsets=' '
while [[ $day -lt $OPA_FORECAST_DAYS ]] ; do
  day_offsets="${day_offsets}$day " 
  day=$(( $day + 1 ))
done

opaoper_f_input_dir=$OPA_WRKDIR/OPAOPER_F
for var in $OPA_VARIABLES ; do
  input_file="$opaoper_f_input_dir/${input_date}_${var}.nc"
  if [[ ! -f $input_file ]] ; then
    opa_log 0 "ERR: missing input file [${input_file}]"
    errors=$(( $errors + 1 ))
    continue
  fi
  for day_offset in $day_offsets ; do
    output_file_date=$( $OPA_BINDIR/date --utc --date="$OPA_RUNDATE 00:00:00 $day_offset days" +%y%m%d )
    output_file="${output_file_date}_${var}.nc"
    time_increment=$(( $day_offset + 1 ))
    opa_prex_or_die "$OPA_BINDIR/ncks -O -F -d time_counter,${time_increment},${time_increment} $input_file $output_dir/$output_file" || errors=$(( $errors + 1 ))
  done
  if [[ -f $output_dir/$output_file ]] ; then
    day_offset=$(( $day_offset + 1 ))
    output_file_date=$( $OPA_BINDIR/date --utc --date="$OPA_RUNDATE 00:00:00 $day_offset days" +%y%m%d )
    last_output_file="$output_file"
    output_file="${output_file_date}_${var}.nc"
    [[ -f $output_dir/$output_file ]] && opa_prex "rm -f $output_dir/$output_file"
    opa_prex "ln -fs $last_output_file $output_dir/$output_file"
  else
    opa_log 0 "ERR: missing last file [${output_file}]"
    errors=$(( $errors + 1 ))
  fi
done


opa_exit "$errors"



