if [[ $__OPA_PROFILE_galileo_IS_DEFINED__ == '' ]] ; then
  __OPA_PROFILE_galileo_IS_DEFINED__='__defined__'

# Load environment for pbs, modules:
. /etc/profile.d/slurm.sh
. /etc/profile.d/modules.sh


    OPA_RM=slurm
    OPA_MPI=intelmpi



OPA_HOST_PRIMARY_LOGIN_NODE='r000u06l01.marconi.cineca.it'
OPA_HOST_SECONDARY_LOGIN_NODE='r000u07l02.marconi.cineca.it'

OPA_HOST_PRIMARY_HOSTNAME='r000u06l01'
OPA_HOST_SECONDARY_HOSTNAME='r000u07l02'

#nominal coordinates (if backup)
if $I_OPA_BACKUP ; then
  OPA_NOMINAL_HOME='/g100/home/usera07ogs/a07ogs00/OPA/V7C'
  OPA_NOMINAL_LOGIN='login.g100.cineca.it'
fi

#For crontab check
OPA_HOST_CRON_CHECK="login01.g100.cineca.it login02.g100.cineca.it"

NODENAME=$(hostname)                    # nome del nodo
NODE=$( echo "$NODENAME"| cut -d: -f1 ) # prima parte del nome del nodo

OPA_HOST_LOGIN_NODES="$OPA_HOST_PRIMARY_LOGIN_NODE $OPA_HOST_SECONDARY_LOGIN_NODE"

OPA_CORES_PER_NODE=48
OPA_DOMAIN=5nodes-skl					#Folder to take for domain (depends on number of used nodes)

OPA_DEFAULT_WALL_CLOCK_LIMIT=06:00:00			# Default wall clock limit [[hh:]mm:]ss
OPA_DEFAULT_WALL_CLOCK_LIMIT_SER=04:00:00			# Default wall clock limit [[hh:]mm:]ss
OPA_DEFAULT_WALL_CLOCK_LIMIT_PAR=03:30:00			# Default wall clock limit [[hh:]mm:]ss
OPA_DEFAULT_TASKS=240					# Default tasks' number WARNING: 1 node is not enough
OPA_DEFAULT_QUEUE="skl_usr_prod"					# Default queue
OPA_DEFAULT_QUEUE_PAR="skl_usr_prod"					# Default queue par
#OPA_DEFAULT_QUEUE_SER="serial"					# Default queue ser
OPA_DEFAULT_QUEUE_SER="bdw_all_serial"					# Default queue ser
OPA_DEFAULT_QOS="bdw_qos_meteoogs"
OPA_DEFAULT_MEM="182000"
opa_batch_prex ". /cineca/prod/opt/environment/module/3.2.10/none/init/ksh"
#opa_batch_prex "module list"
opa_batch_prex "module purge"
#opa_batch_prex "module load profile/advanced"
opa_batch_prex "module load autoload"
opa_batch_prex "module load intelmpi/2018--binary"
opa_batch_prex "module load mkl/2018--binary"
opa_batch_prex "module load python/2.7.12"
#opa_batch_prex "module load scipy/0.18.1--python--2.7.12"
#opa_batch_prex "module load mpi4py/2.0.0--python--2.7.12"

#opa_batch_prex "module list"
opa_batch_prex "ulimit -s unlimited"

function opa_is_login_node {
#   ksh /cineca/scripts/ha_login.select ; return $?
    return 0
}


# end of include guard:
fi
