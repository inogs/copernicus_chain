#!/bin/ksh

# Load common profile
. @@(I:OPA_HOME)/bin/opa_profile.inc


# Rundate definition
opa_set_run

# start
opa_start
opa_prex "source $OPA_VENV_1/bin/activate"
PYTHONPATH=${PYTHONPATH}:$OPA_BITSEA

typeset -i errors=0

domain_dir="$OPA_ETCDIR/static-data/DOMAIN"
wrkdir=$OPA_WRKDIR/MODEL



### Copy of restart files:

if [[ $OPA_RUNTYPE == 'analysis' ]] ; then
    restart_arc_dir="$OPA_ARCDIR_ROOT/analysis/$OPA_RESTART_RUNDATE/MODEL"

else # forecast case
   if [[ $OPA_WEEKDAY -eq 2 ]] ; then
      restart_arc_dir="$OPA_ARCDIR_ROOT/analysis/$OPA_RESTART_RUNDATE/MODEL"
      if [[ -d $restart_arc_dir ]] ; then
         echo "OK, analysis restart found"
      else
         OPA_RESTART_RUNDATE=$($OPA_BINDIR/date --utc --date="${OPA_RUNDATE} 1 days ago" +"%Y%m%d")
         echo "WARNING: analysis restarts not found. Forecast ones will be taken."
         echo "WARNING: quality of prediction will be affected "
         restart_arc_dir="$OPA_ARCDIR_ROOT/forecast/$OPA_RESTART_RUNDATE/MODEL"
      fi
   else
      restart_arc_dir="$OPA_ARCDIR_ROOT/forecast/$OPA_RESTART_RUNDATE/MODEL"
   fi
fi


echo "restart_arc_dir=$restart_arc_dir"


  if $I_OPA_BACKUP; then
    if (ssh $OPA_NOMINAL_LOGIN [ -d $OPA_NOMINAL_HOME/archive/forecast/$OPA_RESTART_RUNDATE ]); then
      print "Backup system; downloading from nominal archive"
      opa_prex "scp -r $OPA_NOMINAL_LOGIN:$OPA_NOMINAL_HOME/archive/forecast/$OPA_RESTART_RUNDATE $I_OPA_HOME/archive/forecast"
    else
      print "Error with $OPA_NOMINAL_HOME/archive/forecast/$OPA_RESTART_RUNDATE on $OPA_NOMINAL_LOGIN: directory not existing. Continuing from backup archive"
    fi
  fi

if [[ $I_OPA_HOSTNAME = "meucci" ]]
  then
   export I_MPI_FABRICS=shm:tcp
fi

opa_prex_or_die "tar -xf $restart_arc_dir/RST.${OPA_RESTART_DATE}.tar -C $wrkdir/RESTARTS/"



### Instantiation of namelist templates:
nml_dir="$OPA_TPLDIR/namelists"

opa_stage_in	"$wrkdir"						\
                "$nml_dir/Benthic_Environment.nml"                      \
                "$nml_dir/BFM_General.nml"                              \
                "$nml_dir/Carbonate_Dynamics.nml"                       \
                "$nml_dir/Pelagic_Ecology.nml"                          \
                "$nml_dir/Pelagic_Environment.nml"                      \
                "$nml_dir/Standalone.nml"                               \
                "$nml_dir/boundaries.nml"                               \
                "$nml_dir/atl.nml"                                      \
                "$nml_dir/dar.nml"                                      \
                "$nml_dir/gib.nml"                                      \
                "$nml_dir/riv.nml"                                      \
                "$nml_dir/namelist.passivetrc"				\
                "$nml_dir/namelist.init"                                \
                "$nml_dir/namelist.phys"                                \
                "$nml_dir/var_3d_nml"			|| {
  errors=$(( $errors + $? ))
}



### Copy of domain file:
opa_cp "$domain_dir/$OPA_DOMAIN/domdec.txt $wrkdir/domdec.txt" || {
  errors=$(( $errors + 1 ))
}




opa_stage_in	"$wrkdir"						\
                "$OPA_ETCDIR/static-data/MODEL/bfmmask.nc"      \
		"$OPA_ETCDIR/static-data/MED24_125/bounmask.nc"	\
		"$OPA_ETCDIR/static-data/MED24_125/meshmask.nc"	|| {
  errors=$(( $errors + $? ))
}

### stagein of optical files


opa_prex "cd $wrkdir"
opa_stage_in    "$wrkdir/OPTICS"       \
                  "$OPA_ETCDIR/static-data/MODEL/ATM/climatm.yyyy0115-00:00:00.nc" \
                  "$OPA_ETCDIR/static-data/MODEL/ATM/climatm.yyyy0215-00:00:00.nc" \
                  "$OPA_ETCDIR/static-data/MODEL/ATM/climatm.yyyy0315-00:00:00.nc" \
                  "$OPA_ETCDIR/static-data/MODEL/ATM/climatm.yyyy0415-00:00:00.nc" \
                  "$OPA_ETCDIR/static-data/MODEL/ATM/climatm.yyyy0515-00:00:00.nc" \
                  "$OPA_ETCDIR/static-data/MODEL/ATM/climatm.yyyy0615-00:00:00.nc" \
                  "$OPA_ETCDIR/static-data/MODEL/ATM/climatm.yyyy0715-00:00:00.nc" \
                  "$OPA_ETCDIR/static-data/MODEL/ATM/climatm.yyyy0815-00:00:00.nc" \
                  "$OPA_ETCDIR/static-data/MODEL/ATM/climatm.yyyy0915-00:00:00.nc" \
                  "$OPA_ETCDIR/static-data/MODEL/ATM/climatm.yyyy1015-00:00:00.nc" \
                  "$OPA_ETCDIR/static-data/MODEL/ATM/climatm.yyyy1115-00:00:00.nc" \
                  "$OPA_ETCDIR/static-data/MODEL/ATM/climatm.yyyy1215-00:00:00.nc" \
                  "$OPA_ETCDIR/static-data/MODEL/ATM/aero.yyyy0115-00:00:00.nc" \
                  "$OPA_ETCDIR/static-data/MODEL/ATM/aero.yyyy0215-00:00:00.nc" \
                  "$OPA_ETCDIR/static-data/MODEL/ATM/aero.yyyy0315-00:00:00.nc" \
                  "$OPA_ETCDIR/static-data/MODEL/ATM/aero.yyyy0415-00:00:00.nc" \
                  "$OPA_ETCDIR/static-data/MODEL/ATM/aero.yyyy0515-00:00:00.nc" \
                  "$OPA_ETCDIR/static-data/MODEL/ATM/aero.yyyy0615-00:00:00.nc" \
                  "$OPA_ETCDIR/static-data/MODEL/ATM/aero.yyyy0715-00:00:00.nc" \
                  "$OPA_ETCDIR/static-data/MODEL/ATM/aero.yyyy0815-00:00:00.nc" \
                  "$OPA_ETCDIR/static-data/MODEL/ATM/aero.yyyy0915-00:00:00.nc" \
                  "$OPA_ETCDIR/static-data/MODEL/ATM/aero.yyyy1015-00:00:00.nc" \
                  "$OPA_ETCDIR/static-data/MODEL/ATM/aero.yyyy1115-00:00:00.nc" \
                  "$OPA_ETCDIR/static-data/MODEL/ATM/aero.yyyy1215-00:00:00.nc" || {
  errors=$(( $errors + $? ))
}



aux_files=' '

opa_stage_in	"$wrkdir/BC/" \
                  "$OPA_ETCDIR/static-data/MODEL/BC/OPE_yyyy0630-00:00:00.nc" \
                  "$OPA_ETCDIR/static-data/MODEL/BC/ATL_yyyy0630-00:00:00.nc" \
                  "$OPA_ETCDIR/static-data/MODEL/BC/CO2_20180702-12:00:00.nc" \
                  "$OPA_ETCDIR/static-data/MODEL/BC/CO2_20190702-12:00:00.nc" \
                  "$OPA_ETCDIR/static-data/MODEL/BC/CO2_20200702-12:00:00.nc" \
                  "$OPA_ETCDIR/static-data/MODEL/BC/CO2_20210702-12:00:00.nc" \
                  "$OPA_ETCDIR/static-data/MODEL/BC/CO2_20220702-12:00:00.nc" \
                  "$OPA_ETCDIR/static-data/MODEL/BC/CO2_20230702-12:00:00.nc" \
                  "$OPA_ETCDIR/static-data/MODEL/BC/CO2_20240702-12:00:00.nc" \
                  "$OPA_ETCDIR/static-data/MODEL/BC/ATM_yyyy0630-00:00:00.nc" \
                  "$OPA_ETCDIR/static-data/MODEL/BC/GIB_yyyy0630-00:00:00.nc" \
                  "$OPA_ETCDIR/static-data/MODEL/BC/TIN_yyyy0115-00:00:00.nc" \
                  "$OPA_ETCDIR/static-data/MODEL/BC/TIN_yyyy0215-00:00:00.nc" \
                  "$OPA_ETCDIR/static-data/MODEL/BC/TIN_yyyy0315-00:00:00.nc" \
                  "$OPA_ETCDIR/static-data/MODEL/BC/TIN_yyyy0415-00:00:00.nc" \
                  "$OPA_ETCDIR/static-data/MODEL/BC/TIN_yyyy0515-00:00:00.nc" \
                  "$OPA_ETCDIR/static-data/MODEL/BC/TIN_yyyy0615-00:00:00.nc" \
                  "$OPA_ETCDIR/static-data/MODEL/BC/TIN_yyyy0715-00:00:00.nc" \
                  "$OPA_ETCDIR/static-data/MODEL/BC/TIN_yyyy0815-00:00:00.nc" \
                  "$OPA_ETCDIR/static-data/MODEL/BC/TIN_yyyy0915-00:00:00.nc" \
                  "$OPA_ETCDIR/static-data/MODEL/BC/TIN_yyyy1015-00:00:00.nc" \
                  "$OPA_ETCDIR/static-data/MODEL/BC/TIN_yyyy1115-00:00:00.nc" \
                  "$OPA_ETCDIR/static-data/MODEL/BC/TIN_yyyy1215-00:00:00.nc" || {
  errors=$(( $errors + $? ))
}



for I in `ls $OPA_WRKDIR/CMCC_PHYS/* ` ; do
    F=`basename $I`
    opa_ln_or_die "$I $wrkdir/FORCINGS/$F" 
done


DELTA_T_DIR="$wrkdir/DELTA_T"
opa_stage_in "$DELTA_T_DIR" "$OPA_ETCDIR/static-data/MED24_141/meshmask.nc"

case $I_OPA_HOSTNAME in
   meucci)
         opa_prex_or_die "mpirun -np 18 -iface ens6 python $OPA_BITSEA/preproc/delta_t_from_uvw.py -i $wrkdir/FORCINGS/ -o $DELTA_T_DIR -m  $DELTA_T_DIR/meshmask.nc "
     ;;
   *)
         opa_prex_or_die "mpirun -np 18 python $OPA_BITSEA/preproc/delta_t_from_uvw.py -i $wrkdir/FORCINGS/ -o $DELTA_T_DIR -m  $DELTA_T_DIR/meshmask.nc "
     ;;
esac

ECMWF_DIR=$OPA_INPDIR/ECMWF/
if [[ $OPA_RUNTYPE == 'analysis' ]] ; then
	opa_prex_or_die "mpirun -np 7 python $OPA_HOSTDIR/preproc/ATMOSPHERE/online/analysis_input_gen.py -i $ECMWF_DIR -o $ECMWF_DIR -m $wrkdir/meshmask.nc"
	opa_prex_or_die "python $OPA_HOSTDIR/preproc/ATMOSPHERE/online/analysis_input_gen_singleframe.py  -i $ECMWF_DIR -o $ECMWF_DIR -m $wrkdir/meshmask.nc"

	cd "$wrkdir/OPTICS"
	for I in `ls ${ECMWF_DIR}/atm*nc`; do
	   opa_ln_or_die "$I "
	done
else

	date_end_forecast=$($OPA_BINDIR/date --date "$OPA_RUNDATE $OPA_FORECAST_DAYS days" +'%Y%m%d' )

	INPUTFILE=$ECMWF_DIR/${OPA_RUNDATE}_${date_end_forecast}-ECMWF---AM0100-MEDATL-b${OPA_RUNDATE}_fc00-fv11.00.nc

	opa_prex_or_die "mpirun -np 10 python $OPA_HOSTDIR/preproc/ATMOSPHERE/online/forecast_input_gen.py -i $INPUTFILE -o $ECMWF_DIR -m $wrkdir/meshmask.nc"
	opa_prex_or_die "python $OPA_HOSTDIR/preproc/ATMOSPHERE/online/analysis_input_gen.py -i $ECMWF_DIR -o $ECMWF_DIR -m $wrkdir/meshmask.nc"


	cd "$wrkdir/OPTICS"
	for I in `ls ${ECMWF_DIR}/atm*nc`; do
	   opa_prex_or_die "ln -fs $I "
	done

	START_TIME=$( set_spec_data -date ${OPA_RUNDATE} -days "-1" -hours 0 )
	FIRST_TIME=$( set_spec_data -date ${OPA_RUNDATE} -days "-1" -hours 3 )
	opa_prex_or_die "ln -fs atm.${FIRST_TIME}.nc atm.${START_TIME}.nc"

	END___TIME=$( set_spec_data -date ${OPA_RUNDATE} -days "10" -hours 3 )
	LAST__TIME=$( set_spec_data -date ${OPA_RUNDATE} -days "9" -hours 21 )
	opa_prex_or_die "ln -fs atm.${LAST__TIME}.nc atm.${END___TIME}.nc"

fi

if [[ $OPA_RUNTYPE == 'analysis' ]] ; then
opa_prex_or_die "ln -fs $OPA_WRKDIR/DA/SATELLITE      -t $wrkdir" || errors=$(( $errors + 1 ))
opa_prex_or_die "ln -fs $OPA_WRKDIR/DA/DA_static_data -t $wrkdir" || errors=$(( $errors + 1 ))
fi

function datelist {
VAR=$1
for FILE in `ls $VAR*.nc` ; do 
   V=${FILE#$VAR}
   echo ${V%.nc}
done
}

function datelist_MB {
VAR=$1
ls ${VAR}*nc | wc -l
for FILE in `ls $VAR*nc`; do
    echo \'${FILE}\'
done
}


function datelistsat {
VAR=$1
for FILE in `ls $VAR | cut -c 1-8` ; do
   echo ${FILE}-12:00:00
done

}

cd $wrkdir
opa_prex_or_die  "datelist_MB BC/ATL_       > files_namelist_atl.dat" || errors=$(( $errors + 1 ))
opa_prex_or_die  "datelist_MB BC/TIN_       > files_namelist_riv.dat" || errors=$(( $errors + 1 ))
opa_prex_or_die  "datelist_MB BC/GIB_       > files_namelist_gib.dat" || errors=$(( $errors + 1 ))
opa_prex_or_die  "datelist_MB BC/OPE_       > files_namelist_dar.dat" || errors=$(( $errors + 1 ))
opa_prex_or_die  "datelist BC/ATM_          >    AtmTimes" || errors=$(( $errors + 1 ))
opa_prex_or_die  "datelist BC/CO2_          > carbonTimes" || errors=$(( $errors + 1 ))

opa_prex_or_die  "datelist FORCINGS/U      > forcingsTimes" || errors=$(( $errors + 1 ))
opa_prex_or_die  "datelist OPTICS/atm.     >  optatmTimes"
opa_prex_or_die  "datelist OPTICS/climatm. >  optclimTimes"
opa_prex_or_die  "datelist OPTICS/aero.    >  optAeroTimes"





opa_prex "rm -f Start_End_Times 1.aveTimes 2.aveTimes restartTimes"

# CREAZIONE FILE Start_End_Times

if [[ $OPA_RUNTYPE == 'analysis' ]] ; then
  START_TIME=$( set_spec_data -date ${OPA_RUNDATE} -days "-8" -hours 0 )
  END___TIME=$( set_spec_data -date ${OPA_RUNDATE} -days "-1" -hours 0 )
else
  START_TIME=$( set_spec_data -date ${OPA_RUNDATE} -days "-1" -hours 0 )
  END___TIME=$( set_spec_data -date ${OPA_RUNDATE} -days "10" -hours 0 )

fi

echo ${START_TIME}  > Start_End_Times
echo ${END___TIME} >> Start_End_Times


# CREAZIONE FILE aveTimes
if [[ $OPA_RUNTYPE == 'analysis' ]] ; then
typeset -i myday=-8
while [[ ${myday} -ne -1 ]] ; do
  myday=$(( $myday + 1 ))
  set_spec_data -date ${OPA_RUNDATE} -days ${myday} >> 1.aveTimes
done

else
typeset -i myday=-1
while [[ ${myday} -ne 10 ]] ; do
  myday=$(( $myday + 1 ))
  set_spec_data -date ${OPA_RUNDATE} -days ${myday} >> 1.aveTimes
done

fi


if [[ $OPA_RUNTYPE == 'analysis' ]] ; then
  set_spec_data -date ${OPA_RUNDATE} -days "-1" -hours 0 > 2.aveTimes
else
  touch 2.aveTimes #empty
fi


# CREAZIONE FILE restartTimes
if [[ $OPA_RUNTYPE == 'analysis' ]] ; then
    set_spec_data -date ${OPA_RUNDATE} -days "-1" -hours 0 > restartTimes
else
    set_spec_data -date ${OPA_RUNDATE} -days "0"  -hours 0 > restartTimes
fi




if [[ $OPA_RUNTYPE == 'analysis' ]] ; then

  opa_prex_or_die  "datelistsat SATELLITE    > daTimes_sat "    || errors=$(( $errors + 1 ))

  export ONLINE_REPO=$I_OPA_HOME/inpdir/ONLINE
  DA_TIMES_SAT=$wrkdir/daTimes_sat
  DAFREQ=1
  DA_HH=13

  DATIMES_WRKDIR="$OPA_WRKDIR/DA"
  OUTDIR=$wrkdir/DA__FREQ_1
  OUTFILE=$wrkdir/daTimes
  END___TIME=$( set_spec_data -date ${OPA_RUNDATE} -days "-2" -hours 0 )

  cd $OPA_BITSEA/Float/daTimes

  for VARDA in N3n P_l O2o; do
    opa_prex_or_die "python profile_dates_DAfreq.py -f $DAFREQ -t $DA_HH -s ${START_TIME:0:8} -e ${END___TIME:0:8} -v ${VARDA} -o ${DATIMES_WRKDIR}/daTimes_float_${VARDA} "
  done


  # Edit varlist in merge_daTimes.py
  opa_prex_or_die "python merge_daTimes.py -s $DA_TIMES_SAT -d $DATIMES_WRKDIR -o ${OUTFILE} "
  opa_prex_or_die "python gen_3dvar_satfloat_namelists.py -o $OUTDIR -t satfloat.template.nml -r $OUTFILE -s $DA_TIMES_SAT -d $DATIMES_WRKDIR "
else

  touch daTimes # empty
fi


opa_exit "$errors"



