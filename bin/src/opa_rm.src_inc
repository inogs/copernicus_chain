if [[ $__OPA_RM_IS_DEFINED__ == '' ]] ; then
  __OPA_RM_IS_DEFINED__='__defined__'


# This script is a wrapper to include the specific script for $OPA_RM;
# the rm-specific script must define these functions:
# 1) opa_rm_wall_clock_limit "[[hh:]mm:]ss"
#    converts the wall clock limit in hh:mm:ss format to the RM format
# 2) opa_rm_submit <jcf>
#    submits the <jcf> job command file, and (possibly) sets 
#    OPA_RM_SUBMIT_JOBID	# the jobid of the submitted job
#    OPA_RM_SUBMIT_QUEUE	# the queue of the submitted job (optional,
#				# supported only by LSF
	

OPA_RM_SUBMIT_JOBID=$OPA_UNDEFINED      # jobid of the last submitted job
OPA_RM_SUBMIT_QUEUE=$OPA_UNDEFINED      # jobid of the last submitted job
OPA_RM_EO_FILENAME_PART=$OPA_UNDEFINED	# specific part of the eo filename

OPA_RM_STATUS_RUNNING="Running"
OPA_RM_STATUS_SUSPENDED="Suspended"
OPA_RM_STATUS_FINISHED="Finished"
OPA_RM_STATUS_HELD="Held"
OPA_RM_STATUS_QUEUED="Queued"
OPA_RM_STATUS_EXITING="Exiting"
OPA_RM_STATUS_UNKNOWN="Unknown"

_OPA_RM_JOB_STAT_FORMAT="%-40s %s\n"
function opa_rm_job_stat_header {
  printf "$_OPA_RM_JOB_STAT_FORMAT" "JOBID" "STATUS"
}
function opa_rm_job_stat_formatter {
  typeset _jobid="$1"
  typeset _status="$2"
  printf "$_OPA_RM_JOB_STAT_FORMAT" "$_jobid" "$_status"
}

rm_inc_file="$OPA_SCRDIR/opa_rm__${OPA_RM}.inc"
if [[ ! -f $rm_inc_file ]] ; then
  echo "ERROR: there is no inc file for resource manager [${OPA_RM}]!" 1>&2
  exit 1
fi

function _opa_rm_wrap_command {
  typeset    _command="$1"
  typeset -i _ec=0
  #echo "=== $_command"
  echo "=== Begin ======================================================================"
  opa_prex "$_command" ; _ec=$?
  echo "=== End ========================================================================"
  return $_ec
}
# Load the rm-specific include file
. "$rm_inc_file"

# end of include guard:
fi
