#!/bin/ksh
# phase C5: put on DU

# Load common profile
. @@(I:OPA_HOME)/bin/opa_profile.inc

# Rundate definition
opa_set_run

# start
opa_start

typeset -i errors=0

typeset _logfile="$OPA_RUNLOGDIR/opa.${I_OPA_HOSTNAME}.${OPA_RUNID}.opa_put_phase_2.out"

echo "START" > $_logfile

opa_log 0 "postprocess_C5 begin"

# Deliver products to CMEMS
PRODUCTS_DIR=$OPA_WRKDIR/POSTPROC/PRODUCTS

opa_log 0 "delivering to CMEMS DU"
opa_prex "@@(I:OPA_HOME)/bin/opa_put_phase_2.ksh -y NUTR 1>> $_logfile 2>&1"            || errors=$(( $errors + 1 ))
opa_prex "@@(I:OPA_HOME)/bin/opa_put_phase_2.ksh -y BIOL 1>> $_logfile 2>&1"            || errors=$(( $errors + 1 ))
opa_prex "@@(I:OPA_HOME)/bin/opa_put_phase_2.ksh -y CARB 1>> $_logfile 2>&1"            || errors=$(( $errors + 1 ))
opa_prex "@@(I:OPA_HOME)/bin/opa_put_phase_2.ksh -y PFTC 1>> $_logfile 2>&1"            || errors=$(( $errors + 1 ))
opa_prex "@@(I:OPA_HOME)/bin/opa_put_phase_2.ksh -y CO2F 1>> $_logfile 2>&1"            || errors=$(( $errors + 1 ))
opa_prex "@@(I:OPA_HOME)/bin/opa_put_phase_2.ksh -y EXCO 1>> $_logfile 2>&1"            || errors=$(( $errors + 1 ))


if [[ $OPA_RUNTYPE == 'analysis' ]] ; then
  DAY=$( date --date="$OPA_RUNDATE" +%d )
 YEAR=$( date --date="$OPA_RUNDATE" +%Y )
MONTH=$( date --date="$OPA_RUNDATE" +%m )

if [[ $DAY -gt 7 ]] && [[ $DAY -lt 15 ]] ; then

	# Deliver monthly products to CMEMS
	PRODUCTS_DIR=$OPA_WRKDIR/POSTPROC/MONTHLY/PRODUCTS

	opa_log 0 "delivering monthly to CMEMS DU"
	opa_prex "@@(I:OPA_HOME)/bin/opa_put_phase_2_monthly.ksh -y NUTR 1>> $_logfile 2>&1"            || errors=$(( $errors + 1 ))
	opa_prex "@@(I:OPA_HOME)/bin/opa_put_phase_2_monthly.ksh -y BIOL 1>> $_logfile 2>&1"            || errors=$(( $errors + 1 ))
	opa_prex "@@(I:OPA_HOME)/bin/opa_put_phase_2_monthly.ksh -y CARB 1>> $_logfile 2>&1"            || errors=$(( $errors + 1 ))
	opa_prex "@@(I:OPA_HOME)/bin/opa_put_phase_2_monthly.ksh -y PFTC 1>> $_logfile 2>&1"            || errors=$(( $errors + 1 ))
	opa_prex "@@(I:OPA_HOME)/bin/opa_put_phase_2_monthly.ksh -y CO2F 1>> $_logfile 2>&1"            || errors=$(( $errors + 1 ))
    opa_prex "@@(I:OPA_HOME)/bin/opa_put_phase_2_monthly.ksh -y EXCO 1>> $_logfile 2>&1"            || errors=$(( $errors + 1 ))

    if [ $errors -eq 0 ] ;then

    YEAR_TO_REMOVE=$(( $YEAR  - 2 ))
    m=$(( $MONTH - 1 ))
    if [ $m -eq 0 ]; then # we have to remove december
       m=12
       YEAR_TO_REMOVE=$(( $YEAR  - 3 ))
    fi
    MONTH_TO_REMOVE=`printf %02d $m`
    opa_prex "@@(I:OPA_HOME)/bin/opa_remove_DU_prod.ksh -y $YEAR_TO_REMOVE -m $MONTH_TO_REMOVE -t NUTR 1>> $_logfile 2>&1"  || errors=$(( $errors + 1 ))
    opa_prex "@@(I:OPA_HOME)/bin/opa_remove_DU_prod.ksh -y $YEAR_TO_REMOVE -m $MONTH_TO_REMOVE -t BIOL 1>> $_logfile 2>&1"  || errors=$(( $errors + 1 ))
    opa_prex "@@(I:OPA_HOME)/bin/opa_remove_DU_prod.ksh -y $YEAR_TO_REMOVE -m $MONTH_TO_REMOVE -t CARB 1>> $_logfile 2>&1"  || errors=$(( $errors + 1 ))
    opa_prex "@@(I:OPA_HOME)/bin/opa_remove_DU_prod.ksh -y $YEAR_TO_REMOVE -m $MONTH_TO_REMOVE -t PFTC 1>> $_logfile 2>&1"  || errors=$(( $errors + 1 ))
    opa_prex "@@(I:OPA_HOME)/bin/opa_remove_DU_prod.ksh -y $YEAR_TO_REMOVE -m $MONTH_TO_REMOVE -t CO2F 1>> $_logfile 2>&1"  || errors=$(( $errors + 1 ))
    opa_prex "@@(I:OPA_HOME)/bin/opa_remove_DU_prod.ksh -y $YEAR_TO_REMOVE -m $MONTH_TO_REMOVE -t EXCO 1>> $_logfile 2>&1"  || errors=$(( $errors + 1 ))
    fi

    opa_prex "@@(I:OPA_HOME)/bin/opa_put_phase_2_monthly.ksh -y MVR 1>> $_logfile 2>&1"             || errors=$(( $errors + 1 ))
fi
fi

opa_log 0 "postprocess_C5 done [$(opa_exitcode $ec)]"

opa_exit "$errors"



